# Check if client is capable of handling webp
map $http_accept $webp_suffix {
    default "";
    "~*webp" ".webp";
}

# Capture image path, without the file extension
map $uri $image {
    ~*^/(img)/(.+)\.(jpe?g|png)$  /$1/$2;
}

upstream backend {
    server php-fpm:9000;
}

server {
    listen 3030;  # Слушаем на порту 3030

    server_name localhost;
    root /var/www/backend/public;
    charset utf-8;

    index index.php;

    # Заголовки CORS
    add_header "Access-Control-Allow-Origin" "*" always;
    add_header "Access-Control-Allow-Methods" "GET, POST, PATCH, PUT, DELETE, OPTIONS";
    add_header "Access-Control-Allow-Headers" "X-Requested-With, Authorization, Origin, X-Auth-Token, Content-Type, Accept, Referer";
    add_header "Access-Control-Allow-Headers" "DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Accept, Content-Type, Range, Authorization, X-Metadata, X-To";
    add_header "Access-Control-Allow-Credentials" "true";
    add_header "Access-Control-Expose-Headers" "Content-Length, Content-Range, Content-Type, Content-Disposition, X-Metadata, Authorization";

    error_log /dev/stderr;
    access_log /dev/stdout;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    # Запрещаем доступ к скрытым файлам
    location ~ /\.(?!well-known).* {
        deny all;
    }

    ############# Backend ################

    # Обработка изображений с webp
    location /img {
        add_header Vary Accept;
        try_files $image$webp_suffix $uri =404;
    }

    # Главный блок обработки запросов
    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        try_files $uri $uri/ @rewrite;
    }

    # Рерайтинг запросов на index.php
    location @rewrite {
        rewrite ^/(.*)$ /index.php;
    }

    # Обработка PHP-файлов
    location ~ \.php$ {
        fastcgi_pass php-fpm:9000;
        fastcgi_index index.php;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param SCRIPT_FILENAME $request_filename;
        include fastcgi_params;
    }
}
