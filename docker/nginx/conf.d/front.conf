upstream frontend {
    server frontend:8080;
}

server {
    listen 3000;  # Слушаем только на порту 3000

    server_name localhost;

    charset utf-8;

    error_log /dev/stderr;
    access_log /dev/stdout;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    # Заголовки для CORS
    add_header "Access-Control-Allow-Origin" "*" always;
    add_header "Access-Control-Allow-Methods" "GET, POST, PATCH, PUT, DELETE, OPTIONS";
    add_header "Access-Control-Allow-Headers" "X-Requested-With, Authorization, Origin, X-Auth-Token, Content-Type, Accept, Referer";
    add_header "Access-Control-Allow-Headers" "DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Accept, Content-Type, Range, Authorization, X-Metadata, X-To";
    add_header "Access-Control-Allow-Credentials" "true";
    add_header "Access-Control-Expose-Headers" "Content-Length, Content-Range, Content-Type, Content-Disposition, X-Metadata, Authorization";

    # Запрещаем доступ к скрытым файлам
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Проксирование запросов к backend
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
    }

    # Проксирование для WebSocket
    location /ws {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }
}
